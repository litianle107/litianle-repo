<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>虚拟化技术</title>
      <link href="/posts/aa435277.html"/>
      <url>/posts/aa435277.html</url>
      
        <content type="html"><![CDATA[<h2 id="虚拟化技术"><a href="#虚拟化技术" class="headerlink" title="虚拟化技术"></a>虚拟化技术</h2><h3 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h3><p>虚拟化技术是云计算的根基，在计算机技术中，<strong>虚拟化（技术）</strong>或<strong>虚拟技术</strong>（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源（<strong>CPU、内存、磁盘空间、网络适配器</strong>等），予以抽象、转换后呈现出来并可供分割、组合为一个或多个电脑配置环境。由此，打破实体结构间的不可切割的障碍，使用户可以比原本的配置更好的方式来应用这些电脑硬件资源。这些资源的新虚拟部分是不受现有资源的架设方式，地域或物理配置所限制。一般所指的虚拟化资源包括<strong>计算(CPU+内存），网络，存储</strong>。</p><blockquote><p>虚拟化的特点、本质:</p><ul><li><p>分区： 在单一物理机器上，同时运行多个虚拟机</p></li><li><p>隔离： 在单一物理机器上，多个虚拟机之间不会互相影响</p></li><li><p>封装：</p></li><li><p>相对于硬件独立:</p></li></ul></blockquote><h3 id="企业级的虚拟化"><a href="#企业级的虚拟化" class="headerlink" title="企业级的虚拟化"></a>企业级的虚拟化</h3><p>在有了虚拟化技术之后，对于一些大型企业来说，它有很多业务，每次运行一个业务就都需要开启一个虚拟机，对于管理员来说要管理1000个虚拟机、甚至更多个虚拟机，管理起来就非常不方便了，于是就有人提出了**&#x3D;&#x3D;云计算&#x3D;&#x3D;**的概念，所以说，云计算其实是在虚拟化的基础上发展而来的，但是随着虚拟化的发展，又产生了很多新的问题，因为运行的业务越来越多了，数据的价值也越来越高，就需要更多的增值服务</p><h3 id="硬件辅助虚拟化（主流）"><a href="#硬件辅助虚拟化（主流）" class="headerlink" title="硬件辅助虚拟化（主流）"></a>硬件辅助虚拟化（主流）</h3><p>虚拟化已经成为一种趋势了，芯片厂商后来在CPU里加了一个特殊的指令集（Intel的VT-x和AMD的AMD-V），现在是通过CPU自身来拦截处理和转换，对于虚拟机内核来讲，只要将标志位设为虚拟机状态，则可以直接在CPU上执行大部分的指令，不需要虚拟化软件在中间转述，除非遇到特别敏感的指令，才需要将标志位设为物理机内核态运行，这样大大提高了效率。华为的FusionCompute就是硬件辅助虚拟化。</p><ul><li><p>判断是否支持硬件辅助虚拟化</p><ul><li><p>cat &#x2F;proc&#x2F;cpuinfo |grep vmx命令 <Intel></Intel></p></li><li><p>cat &#x2F;proc&#x2F;cpuinfo |grep svm命令 <AMD></AMD></p></li></ul></li></ul><h3 id="CPU虚拟化"><a href="#CPU虚拟化" class="headerlink" title="CPU虚拟化"></a>CPU虚拟化</h3><ul><li><p>CPU虚拟化是指通过虚拟化技术，在一台物理计算机上创建多个虚拟计算机，并在每个虚拟计算机中运行一个完整的操作系统和应用程序；在虚拟化环境中，每个虚拟计算机可以独立访问分配给它的计算资源，如CPU、内存、存储等，并且可以在不影响其他虚拟机的情况下进行配置、管理和维护。</p></li><li><p>CPU虚拟化技术可以提高计算机资源的利用率和灵活性，同时降低IT成本和管理复杂度。在虚拟化环境中，多个虚拟机可以共享一台物理计算机的计算资源，从而实现更好的资源利用效率；此外，虚拟化环境还可以快速创建和销毁虚拟机，以满足不同业务需求的变化，从而提高IT管理的灵活性和敏捷性。</p></li><li><p>总的来说，CPU虚拟化技术是企业和个人在应用和服务部署上的一个重要技术手段，可以提高计算机资源利用率和灵活性，降低IT成本和管理复杂度，为用户提供更加高效、灵活和安全的计算服务。</p></li><li><blockquote><p>虚拟出来的cpu资源，叫vCPU</p><ul><li><p>计算公式： (物理cpu个数 * 物理核数 * 每个核逻辑线程数)* 复用率</p><ul><li>虚拟机的vcpu使用率&gt;30% ， 建议复用率不大于100%（即不复用）</li><li>虚拟机的vcpu使用率&lt;20% , 建议复用率在 200%~300%</li><li>20%&lt;虚拟机的vcpu复用率&lt;30%, 建议复用率在100%~200%</li></ul></li></ul></blockquote></li></ul><h2 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h2><h3 id="通俗的了解云计算"><a href="#通俗的了解云计算" class="headerlink" title="通俗的了解云计算"></a>通俗的了解云计算</h3><ul><li>云计算<code>狭义</code>上的意思：“云”实质上就是一个网络，狭义上讲，云计算就是一种提供资源的网络，使用者可以随时获取“云”上的资源，按需求量使用，并且可以看成是无限扩展的，只要按使用量付费就可以，“云”就像自来水厂一样，我们可以随时接水，并且不限量，按照自己家的用水量，付费给自来水厂就可以。</li><li>云计算<code>广义</code>上的意思：云计算是与信息技术、软件、互联网相关的一种服务，这种计算资源共享池叫做“云”，云计算把许多计算资源集合起来，通过软件实现自动化管理，只需要很少的人参与，就能让资源被快速提供。也就是说，计算能力作为一种商品，可以在互联网上流通，就像水、电、煤气一样，可以方便地取用，且价格较为低廉。</li><li>云计算<code>通俗理解</code>：通过互联网提供全球用户计算力、存储服务，为互联网信息处理提供硬件基础。云计算，简单说就是把你自己电脑里的或者公司服务器上的硬盘、CPU都放到网上，统一动态调用。</li></ul><h3 id="云计算与虚拟化"><a href="#云计算与虚拟化" class="headerlink" title="云计算与虚拟化"></a>云计算与虚拟化</h3><p>虚拟化和云计算是两种完全独特的技术。我们可以认为，&#x3D;&#x3D;虚拟化是操控硬件的软件技术&#x3D;&#x3D;，而&#x3D;&#x3D;云计算是指由操控产生的服务&#x3D;&#x3D;。即我们可以将<code>虚拟化视为技术</code>，将<code>云计算视为服务</code>。&#x3D;&#x3D;虚拟化是云计算的基础技术能力&#x3D;&#x3D;。</p><p>因此，结合虚拟化来说，&#x3D;&#x3D;云计算的不同服务模式其实是虚拟化在隔离上的深度和细度问题&#x3D;&#x3D;，以及从物理硬件到运行所需资源的虚拟化程度。</p><p>就像前面说的，虚拟化在最开始是硬件虚拟化，通过虚拟机的形式解决物理硬件隔离的各种问题。当大量的虚拟机被生成出来，然后配合特定的管理、计算、安全以及相应的网络设施，就我们通说所说的IaaS基础设施即服务。</p><p>再进一步，是基于应用层面隔离的PaaS平台即服务，这是一种软件虚拟化，同一个PaaS平台可以同时运行多个应用并运行相同的执行，各个应用之间彼此独立。再细一步，将应用以及相关的数据都绑定在一起，将这一切资源也虚拟化，使得应用不必依赖其执行环境，这也就是我们容器（Container）技术，一种基于操作系统内核的进程隔离。</p><p>那么，随着技术以的发展，云计算的未来会是怎样的？<br>       按照很多专家预测，云计算最终会发展成为一项类似电能的公众资源。这种资源用户想用多少就用多少，按需付费，不用担心资源是否足够，也不用担心地域和时间的限制，随时随地可用，就像手机需要充电了可以很方便的接入使用，只要有插座(API&#x2F;Socket)。</p><p>:smile::smile::fireworks:</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用FileRun搭建私有云盘过程</title>
      <link href="/posts/53abd3d5.html"/>
      <url>/posts/53abd3d5.html</url>
      
        <content type="html"><![CDATA[<h2 id="用FileRun搭建私有云盘过程"><a href="#用FileRun搭建私有云盘过程" class="headerlink" title="用FileRun搭建私有云盘过程"></a>用FileRun搭建私有云盘过程</h2><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618181649689.png" alt="image-20230618181649689"></p><blockquote><p>正常安装CentOS系统，我这里选的是CentOS8DVD版本，里面已经包含了各种下载好了的包，但是镜像占比比较大；也有boot版本，只包含了CentOS系统的引导程序，镜像占比较小。</p></blockquote><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618184716587.png" alt="image-20230618184716587"></p><blockquote><p>将虚拟机的网络配置为NAT模式，使其可以ping通外网。</p></blockquote><h3 id="配置安装环境"><a href="#配置安装环境" class="headerlink" title="配置安装环境"></a>配置安装环境</h3><h4 id="第一步：安装httpd服务"><a href="#第一步：安装httpd服务" class="headerlink" title="第一步：安装httpd服务"></a>第一步：安装httpd服务</h4><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618185118166.png"></p><blockquote><p>因为我这里镜像和版本较高，所以不需要进行挂载镜像，配置yum源等操作，低版本的还是一步一步来。</p></blockquote><pre><code class="bash">systemctl start httpd 开启服务systemctl enabled httpd 设置为开机自启动</code></pre><h4 id="第二步：安装MariaDB数据库"><a href="#第二步：安装MariaDB数据库" class="headerlink" title="第二步：安装MariaDB数据库"></a>第二步：安装MariaDB数据库</h4><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618190631548.png" alt="image-20230618190631548"></p><blockquote><p>该服务器将管理FileRun数据库，该数据库保存应用程序设置，用户设置和有关文件的信息。</p></blockquote><pre><code class="bash">systemctl start mariadbsystemctl enable mariadb</code></pre><blockquote><p>现在我们的MariaDB服务器正在运行，我们想运行一个简单的脚本来提高数据库的安全性：</p></blockquote><pre><code class="bash">sudo mysql_secure_installation (sudo指使用管理员权限执行这条指令，如果是root登录的话则不需要)</code></pre><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618191407976.png" alt="image-20230618191407976"></p><blockquote><p>这里提示将要求我们输入当前的MariaDB根密码。由于我们刚刚安装了MariaDB，因此我们将没有，因此请按回车将其留空。</p></blockquote><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618191837364.png" alt="image-20230618191837364"></p><blockquote><p>对于其余问题，我们只需在每个提示中按键即可看自己是否需要。这将删除一些示例用户和数据库，禁用远程根登录，并加载这些新规则，以便 MariaDB 立即尊重我们所做的更改。</p></blockquote><blockquote><p>要开始使用，请使用 root 帐户登录 MariaDB：</p></blockquote><p><strong><code>mysql -u root -p</code></strong> </p><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618192322299.png" alt="image-20230618192322299"></p><p><strong><code>这里输入的是刚刚创建的MariaDB的根密码：123456</code></strong></p><pre><code class="sql">Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 15Server version: 10.3.28-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt; create database filerun;Query OK, 1 row affected (0.000 sec)MariaDB [(none)]&gt; GRANT ALL ON filerun.* to &#39;filerun&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;Query OK, 0 rows affected (0.001 sec)</code></pre><p>&#x3D;&#x3D;注意这里是sql语言，每一条命令结束都需要加<code>；</code>，不然会报错&#x3D;&#x3D;</p><blockquote><p>FileRun 需要一个单独的数据库来存储其数据。<code>create database filerun;</code> 我这里创建的是filerun数据库，也可以用其他命名。</p></blockquote><blockquote><p>创建一个单独的 MariaDB 用户帐户，该帐户将与新创建的数据库进行交互。从管理和安全的角度来看，创建单功能数据库和帐户是一个好主意。<code>GRANT ALL ON filerun.* to &#39;filerun&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</code> </p></blockquote><blockquote><p> 为用户分配了对数据库的访问权限后，执行刷新权限操作以确保正在运行的 MariaDB 实例知道最近的权限分配：</p></blockquote><pre><code class="sql">MariaDB [(none)]&gt; FLUSH PRIVILEGES;MariaDB 的配置到此结束，因此我们将通过键入以下内容退出会话：MariaDB [(none)]&gt; exit</code></pre><h4 id="第三步：安装-PHP-FPM-7-4"><a href="#第三步：安装-PHP-FPM-7-4" class="headerlink" title="第三步：安装 PHP-FPM 7.4"></a>第三步：安装 PHP-FPM 7.4</h4><blockquote><p>鉴于 CentOS 8 仍然默认提供较旧的 PHP 版本 7.2，我们首先需要启用较新的 yum 模块;然后安装PHP7.4。</p></blockquote><ol><li><code>yum module enable php:7.4 </code></li><li><code>yum install php-fpm</code></li></ol><blockquote><p>接下来，为 PHP-FPM 创建系统启动链接并启动它：</p></blockquote><ol><li><code>systemctl enable php-fpm.service</code></li><li><code>systemctl start php-fpm.service</code></li></ol><blockquote><p> PHP-FPM是一个守护进程（带有初始化脚本），它在端口上运行FastCGI服务器。<code>/etc/init.d/php-fpm``9000</code></p><p>为了使 Apache 与 PHP-FPM 一起工作，我们编辑了 Apache 配置文件：</p></blockquote><p><code>vi /etc/httpd/conf/httpd.conf</code></p><blockquote><p>并在末尾附近的某个地方<code>IncludeOptional conf.d/*.conf</code>（在该行之前）添加以下内容：</p></blockquote><pre><code class="bash">&lt;Proxy &quot;unix:/run/php-fpm/www.sock|fcgi://php-fpm&quot;&gt;       ProxySet disablereuse=off&lt;/Proxy&gt;&lt;FilesMatch \.php$&gt;       SetHandler proxy:fcgi://php-fpm&lt;/FilesMatch&gt;  </code></pre><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618201602061.png" alt="image-20230618201602061"></p><blockquote><p>接下来，在同一配置文件的更高位置，找到指令<code>DirectoryIndex</code>并附加：<code>index.php</code></p></blockquote><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618202009401.png" alt="image-20230618202009401"></p><p><strong><code>DirectoryIndex index.html index.php </code></strong></p><blockquote><p> 重新启动 Apache，现在安装了 PHP。</p></blockquote><p><code>systemctl restart httpd.service  </code></p><h4 id="第四步：配置PHP"><a href="#第四步：配置PHP" class="headerlink" title="第四步：配置PHP"></a>第四步：配置PHP</h4><blockquote><p>以下命令将安装 FileRun 所需的 PHP 模块：</p></blockquote><pre><code class="bash">yum install php-mbstring php-opcache php-pdo php-mysqlnd php-gd php-xml php-zip php-json</code></pre><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618203229669.png" alt="image-20230618203229669"></p><blockquote><p>存储库中未包含的最后一个模块是 ionCube。使用以下命令下载并解压缩最新版本：</p><p>&#x3D;&#x3D;注意：&#x3D;&#x3D; 这条命令是从网上下载模块，耗时较长，有自己的网速而定，需要耐心等待。</p></blockquote><pre><code class="bash">cd /usr/lib64/php/modules  sudo wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz  sudo tar xvfz ioncube_loaders_lin_x86-64.tar.gz  </code></pre><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618203702330.png" alt="image-20230618203702330"></p><p><code>tar xvfz ioncube_loaders_lin_x86-64.tar.gz</code> <em>下载好的模块是一个压缩包，需要解压tar</em></p><blockquote><p>接下来，让我们创建一个文件，该文件将自动由 PHP 附加到其配置中。这将包括文件运行所需的所有设置。</p></blockquote><p><code>sudo vi /etc/php.d/01_filerun.ini  </code></p><blockquote><p>将以下内容粘贴到创建的文件中：</p></blockquote><pre><code class="bash">expose_php              = Off  error_reporting         = E_ALL &amp; ~E_NOTICE  display_errors          = Off  display_startup_errors  = Off  log_errors              = On  ignore_repeated_errors  = Off  allow_url_fopen         = On  allow_url_include       = Off  variables_order         = &quot;GPCS&quot;  allow_webdav_methods    = On  memory_limit            = 128M  max_execution_time      = 300  output_buffering        = Off  output_handler          = &quot;&quot;  zlib.output_compression = Off  zlib.output_handler     = &quot;&quot;  safe_mode               = Off  register_globals        = Off  magic_quotes_gpc        = Off  upload_max_filesize     = 20M  post_max_size           = 20M  enable_dl               = Off  disable_functions       = &quot;&quot;  disable_classes         = &quot;&quot;  session.save_handler     = files  session.use_cookies      = 1  session.use_only_cookies = 1  session.auto_start       = 0  session.cookie_lifetime  = 0  session.cookie_httponly  = 1  date.timezone            = &quot;UTC&quot;zend_extension = /usr/lib64/php/modules/ioncube/ioncube_loader_lin_7.4.so  </code></pre><ul><li><input checked disabled type="checkbox"> &#x3D;&#x3D;注意&#x3D;&#x3D; ：<em>您可以在此处找到最新的FileRun推荐PHP设置：</em><a href="https://docs.filerun.com/php_configuration">https://docs.filerun.com/php_configuration</a></li></ul><blockquote><p> 重新启动 PHP-FPM 服务才能使更改生效：</p></blockquote><p><code>systemctl restart php-fpm.service </code></p><p><strong>现在我们的服务器现在满足所有要求，我们可以继续安装 FileRun。</strong></p><h3 id="配置FileRun"><a href="#配置FileRun" class="headerlink" title="配置FileRun"></a>配置FileRun</h3><h4 id="第一步：安装文件运行"><a href="#第一步：安装文件运行" class="headerlink" title="第一步：安装文件运行"></a>第一步：安装文件运行</h4><blockquote><p>下载文件在网络服务器的根文件夹中<code>/var/www/html/</code>运行</p></blockquote><pre><code class="bash">cd /var/www/html/  sudo wget -O FileRun.zip https://filerun.com/download-latest-centos-8  </code></pre><p><img src="https://bucket01-litianle.obs.ap-southeast-1.myhuaweicloud.com/image/image-20230618205536585.png" alt="image-20230618205536585"></p><p>然后解压缩文件：<code>unzip FileRun.zip  </code> <em><strong>解压缩文件,zip压缩文件用unzip!</strong></em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
